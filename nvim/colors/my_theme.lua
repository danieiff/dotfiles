local colors = {
  Normal = { fg = "#555555", bg = "#E2E2E2" },
  ModeMsg = { link = "Normal" },
  Bold = { bold = true },
  ["@markup.strong"] = { link = "Bold" },
  Boolean = { fg = "#555555", italic = true },
  ["@boolean"] = { link = "Boolean" },
  BufferVisible = { fg = "#818181" },
  BufferVisibleIndex = { fg = "#818181" },
  BufferVisibleSign = { fg = "#818181" },
  CmpItemAbbr = { fg = "#6D6D6D" },
  CmpItemAbbrDeprecated = { fg = "#989898" },
  CmpItemAbbrMatch = { fg = "#555555", bold = true },
  CmpItemAbbrMatchFuzzy = { fg = "#666666", bold = true },
  CmpItemKind = { fg = "#7C7C7C" },
  CmpItemMenu = { fg = "#868686" },
  CocMarkdownLink = { fg = "#008586", underline = true },
  ColorColumn = { bg = "#E2B8A6" },
  LspReferenceRead = { link = "ColorColumn" },
  LspReferenceText = { link = "ColorColumn" },
  LspReferenceWrite = { link = "ColorColumn" },
  Comment = { fg = "#628562", italic = true },
  ["@comment"] = { link = "Comment" },
  Conceal = { fg = "#868686", bold = true, italic = true },
  Constant = { fg = "#7C7C7C", italic = true },
  Character = { link = "Constant" },
  TroubleSource = { link = "Constant" },
  WhichKeyValue = { link = "Constant" },
  helpOption = { link = "Constant" },
  ["@character"] = { link = "Constant" },
  ["@constant.builtin"] = { link = "Constant" },
  ["@constant.macro"] = { link = "Constant" },
  ["@markup.link"] = { link = "Constant" },
  ["@markup.link.url"] = { link = "Constant" },
  ["@markup.raw"] = { link = "Constant" },
  ["@module"] = { link = "Constant" },
  ["@string.regexp"] = { link = "Constant" },
  ["@variable.builtin"] = { link = "Constant" },
  Cursor = { fg = "#E2E2E2", bg = "#555555" },
  TermCursor = { link = "Cursor" },
  CursorLine = { bg = "#DADADA" },
  CocMenuSel = { link = "CursorLine" },
  CursorColumn = { link = "CursorLine" },
  NeogitDiffContextHighlight = { link = "CursorLine" },
  TelescopeSelection = { link = "CursorLine" },
  CursorLineNr = { fg = "#555555", bg = "NONE", bold = true },
  Delimiter = { fg = "#7C7C7C" },
  markdownLinkTextDelimiter = { link = "Delimiter" },
  ["@constructor.lua"] = { link = "Delimiter" },
  ["@punctuation.bracket"] = { link = "Delimiter" },
  ["@punctuation.delimiter"] = { link = "Delimiter" },
  ["@punctuation.special"] = { link = "Delimiter" },
  ["@tag.delimiter"] = { link = "Delimiter" },
  NeogitNotificationError = { link = "DiagnosticError" },
  NotifyERRORIcon = { link = "DiagnosticError" },
  NotifyERRORTitle = { link = "DiagnosticError" },
  DiagnosticHint = { fg = "#896788" },
  NotifyDEBUGIcon = { link = "DiagnosticHint" },
  NotifyDEBUGTitle = { link = "DiagnosticHint" },
  NotifyTRACEIcon = { link = "DiagnosticHint" },
  NotifyTRACETitle = { link = "DiagnosticHint" },
  DiagnosticInfo = { fg = "#0084A3" },
  NeogitNotificationInfo = { link = "DiagnosticInfo" },
  NotifyINFOIcon = { link = "DiagnosticInfo" },
  NotifyINFOTitle = { link = "DiagnosticInfo" },
  ["@comment.note"] = { link = "DiagnosticInfo" },
  DiagnosticOk = { fg = "#628562" },
  DiagnosticSignError = { fg = "#DC5284", bg = "NONE" },
  CocErrorSign = { link = "DiagnosticSignError" },
  DiagnosticSignHint = { fg = "#896788", bg = "NONE" },
  CocHintSign = { link = "DiagnosticSignHint" },
  DiagnosticSignInfo = { fg = "#0084A3", bg = "NONE" },
  CocInfoSign = { link = "DiagnosticSignInfo" },
  DiagnosticSignOk = { fg = "#628562", bg = "NONE" },
  DiagnosticSignWarn = { fg = "#C48562", bg = "NONE" },
  CocWarningSign = { link = "DiagnosticSignWarn" },
  DiagnosticUnderlineError = { fg = "NONE", sp = "#DC5284", undercurl = true },
  CocErrorHighlight = { link = "DiagnosticUnderlineError" },
  DiagnosticUnderlineHint = { fg = "NONE", sp = "#896788", undercurl = true },
  CocHintHighlight = { link = "DiagnosticUnderlineHint" },
  DiagnosticUnderlineInfo = { fg = "NONE", sp = "#0084A3", undercurl = true },
  CocInfoHighlight = { link = "DiagnosticUnderlineInfo" },
  DiagnosticUnderlineOk = { fg = "NONE", sp = "#628562", undercurl = true },
  DiagnosticUnderlineWarn = { fg = "NONE", sp = "#C48562", undercurl = true },
  CocWarningHighlight = { link = "DiagnosticUnderlineWarn" },
  DiagnosticVirtualTextError = { fg = "#DC5284", bg = "#E9D1D7" },
  CocErrorVirtualText = { link = "DiagnosticVirtualTextError" },
  DiagnosticVirtualTextHint = { fg = "#896788", bg = "#E8D0E7" },
  DiagnosticVirtualTextInfo = { fg = "#0084A3", bg = "#C2DBE8" },
  DiagnosticVirtualTextOk = { fg = "#628562", bg = "#A3E8A3" },
  DiagnosticVirtualTextWarn = { fg = "#C48562", bg = "#E9D3CA" },
  CocWarningVirtualText = { link = "DiagnosticVirtualTextWarn" },
  DiagnosticDeprecated = { link = "DiagnosticWarn" },
  DiagnosticUnnecessary = { link = "DiagnosticWarn" },
  NeogitNotificationWarning = { link = "DiagnosticWarn" },
  NotifyWARNIcon = { link = "DiagnosticWarn" },
  NotifyWARNTitle = { link = "DiagnosticWarn" },
  DiffAdd = { bg = "#AEDEAE" },
  NeogitDiffAddHighlight = { link = "DiffAdd" },
  diffAdded = { link = "DiffAdd" },
  ["@diff.plus"] = { link = "DiffAdd" },
  DiffChange = { bg = "#C0D5E0" },
  diffChanged = { link = "DiffChange" },
  ["@diff.delta"] = { link = "DiffChange" },
  DiffDelete = { bg = "#E5CBD1" },
  NeogitDiffDeleteHighlight = { link = "DiffDelete" },
  diffRemoved = { link = "DiffDelete" },
  ["@diff.minus"] = { link = "DiffDelete" },
  DiffText = { fg = "#555555", bg = "#99B5C3" },
  Directory = { bold = true },
  Error = { fg = "#DC5284" },
  DiagnosticError = { link = "Error" },
  ErrorMsg = { link = "Error" },
  MasonError = { link = "Error" },
  ["@comment.error"] = { link = "Error" },
  FlashBackdrop = { fg = "#868686" },
  FlashLabel = { fg = "#555555", bg = "#00C9F6" },
  FloatBorder = { fg = "#6A6A6A", bg = "NONE" },
  FoldColumn = { fg = "#919191", bg = "NONE", bold = true },
  Folded = { fg = "#4B4B4B", bg = "#BBBBBB" },
  Function = { fg = "#6C6B20" },
  TroubleNormal = { link = "Function" },
  TroubleText = { link = "Function" },
  ["@function"] = { link = "Function" },
  FzfLuaBufFlagAlt = { fg = "#0084A3" },
  FzfLuaBufFlagCur = { fg = "#C48562" },
  FzfLuaBufNr = { fg = "#628562" },
  FzfLuaHeaderBind = { fg = "#628562" },
  FzfLuaHeaderText = { fg = "#C48562" },
  FzfLuaLiveSym = { fg = "#C48562" },
  FzfLuaPathColNr = { fg = "#6D4C52", bold = true },
  FzfLuaPathLineNr = { link = "FzfLuaPathColNr" },
  FzfLuaTabMarker = { fg = "#628562" },
  FzfLuaTabTitle = { fg = "#008586" },
  GitSignsAdd = { fg = "#628562", bg = "NONE" },
  GitGutterAdd = { link = "GitSignsAdd" },
  GitSignsChange = { fg = "#0084A3", bg = "NONE" },
  GitGutterChange = { link = "GitSignsChange" },
  GitSignsDelete = { fg = "#DC5284", bg = "NONE" },
  GitGutterDelete = { link = "GitSignsDelete" },
  HopNextKey = { fg = "#896788", bold = true, underline = true },
  HopNextKey1 = { fg = "#008586", bold = true, underline = true },
  HopNextKey2 = { fg = "#0084A3" },
  HopUnmatched = { fg = "#868686" },
  IblIndent = { fg = "#D4D4D4" },
  IndentLine = { link = "IblIndent" },
  IblScope = { fg = "#ABABAB" },
  IndentLineCurrent = { link = "IblScope" },
  Identifier = { fg = "#555555" },
  ["@property"] = { link = "Identifier" },
  ["@string.special.symbol"] = { link = "Identifier" },
  ["@variable"] = { link = "Identifier" },
  IncSearch = { fg = "#E2E2E2", bg = "#9E779D", bold = true },
  CurSearch = { link = "IncSearch" },
  Italic = { italic = true },
  ["@markup.italic"] = { link = "Italic" },
  ["@markup.italic.markdown"] = { link = "Italic" },
  Keyword = { fg = "#CA6284", bold = true },
  Exception = { link = "Keyword" },
  LeapBackdrop = { fg = "#ABABAB", nocombine = true },
  LeapLabel = { fg = "#AD2EAB", bold = true },
  LeapMatch = { bold = true, nocombine = true, underline = true },
  LineNr = { fg = "#919191", bg = "NONE" },
  CocCodeLens = { link = "LineNr" },
  LspCodeLens = { link = "LineNr" },
  NeogitHunkHeader = { link = "LineNr" },
  SignColumn = { link = "LineNr" },
  LspInlayHint = { fg = "#9C868A", bg = "#DDDDDD" },
  MasonHeader = { fg = "#E2E2E2", bg = "#C48562", bold = true },
  MasonHighlight = { fg = "#0084A3" },
  MasonHighlightBlock = { fg = "#E2E2E2", bg = "#0084A3" },
  MasonHighlightBlockBold = { fg = "#E2E2E2", bg = "#0084A3", bold = true },
  MasonHighlightBlockBoldSecondary = { fg = "#E2E2E2", bg = "#C48562", bold = true },
  MasonHighlightBlockSecondary = { fg = "#E2E2E2", bg = "#C48562" },
  MasonHighlightSecondary = { fg = "#C48562" },
  MasonMuted = { fg = "#7C7C7C" },
  MasonMutedBlock = { fg = "#E2E2E2", bg = "#7C7C7C" },
  MasonMutedBlockBold = { fg = "#E2E2E2", bg = "#7C7C7C", bold = true },
  MoreMsg = { fg = "#628562", bold = true },
  Question = { link = "MoreMsg" },
  NeogitHunkHeaderHighlight = { fg = "#555555", bg = "#DADADA", bold = true },
  NnnNormalNC = { link = "NnnNormal" },
  NnnVertSplit = { link = "NnnWinSeparator" },
  NoiceCmdlineIcon = { fg = "#0084A3" },
  NoiceCmdlinePopupBorder = { link = "NoiceCmdlineIcon" },
  NoiceCmdlinePopupTitle = { link = "NoiceCmdlineIcon" },
  NoiceConfirmBorder = { link = "NoiceCmdlineIcon" },
  NoiceCompletionItemKindDefault = { fg = "#7C7C7C" },
  NonText = { fg = "#A6A6A6" },
  EndOfBuffer = { link = "NonText" },
  Whitespace = { link = "NonText" },
  NormalFloat = { bg = "#CFCFCF" },
  Number = { fg = "#896500" },
  Float = { link = "Number" },
  ["@number"] = { link = "Number" },
  NvimTreeCursorLine = { bg = "#D4D4D4" },
  NvimTreeCursorColumn = { link = "NvimTreeCursorLine" },
  NvimTreeNormal = { fg = "#555555", bg = "#DADADA" },
  NnnNormal = { link = "NvimTreeNormal" },
  NvimTreeRootFolder = { fg = "#0084A3", bold = true },
  NvimTreeSpecialFile = { fg = "#896788", underline = true },
  NvimTreeSymlink = { fg = "#0084A3" },
  NvimTreeWinSeparator = { fg = "bg" },
  NnnWinSeparator = { link = "NvimTreeWinSeparator" },
  Pmenu = { bg = "#C9C9C9" },
  PmenuSbar = { bg = "#9E9E9E" },
  PmenuSel = { bg = "#B0B0B0" },
  PmenuThumb = { bg = "#F3F3F3" },
  PreProc = { fg = "#BE6A84" },
  ["@attribute"] = { link = "PreProc" },
  ["@function.macro"] = { link = "PreProc" },
  ["@keyword.directive"] = { link = "PreProc" },
  ["@keyword.import"] = { link = "PreProc" },
  ["@markup.environment"] = { link = "PreProc" },
  RenderMarkdownCode = { bg = "#DDDDDD" },
  Search = { fg = "#555555", bg = "#CBB1CA" },
  CocSearch = { link = "Search" },
  MatchParen = { link = "Search" },
  QuickFixLine = { link = "Search" },
  Sneak = { link = "Search" },
  SneakLabelMask = { fg = "#896788", bg = "#896788" },
  Special = { fg = "#755F74" },
  WhichKeyGroup = { link = "Special" },
  ["@character.special"] = { link = "Special" },
  ["@constructor"] = { link = "Special" },
  ["@function.builtin"] = { link = "Special" },
  ["@keyword.debug"] = { link = "Special" },
  ["@markup.link.label"] = { link = "Special" },
  ["@markup.list"] = { link = "Special" },
  ["@markup.math"] = { link = "Special" },
  ["@punctuation.special.markdown"] = { link = "Special" },
  ["@string.escape"] = { link = "Special" },
  ["@string.special"] = { link = "Special" },
  ["@tag"] = { link = "Special" },
  SpecialComment = { fg = "#868686" },
  markdownUrl = { link = "SpecialComment" },
  ["@markup.link.url.markdown"] = { link = "SpecialComment" },
  SpecialKey = { fg = "#A6A6A6", italic = true },
  ["@string.escape.markdown"] = { link = "SpecialKey" },
  SpellBad = { fg = "#C66484", sp = "#DC5284", undercurl = true },
  CocSelectedText = { link = "SpellBad" },
  SpellCap = { fg = "#C66484", sp = "#DF6B91", undercurl = true },
  SpellLocal = { link = "SpellCap" },
  SpellRare = { fg = "#C66484", sp = "#C48562", undercurl = true },
  Statement = { fg = "#0084A3", bold = true },
  FzfLuaBufName = { link = "Statement" },
  WhichKey = { link = "Statement" },
  ["@keyword.conditional"] = { link = "Statement" },
  ["@keyword.coroutine"] = { link = "Statement" },
  ["@keyword.exception"] = { link = "Statement" },
  ["@keyword.function"] = { link = "Statement" },
  ["@keyword.operator"] = { link = "Statement" },
  ["@keyword.repeat"] = { link = "Statement" },
  ["@keyword.return"] = { link = "Statement" },
  ["@label"] = { link = "Statement" },
  ["@lsp.type.keyword"] = { link = "Statement" },
  ["@lsp.typemod.keyword.injected"] = { link = "Statement" },
  ["@markup.title.markdown"] = { link = "Statement" },
  ["@operator"] = { link = "Statement" },
  StatusLine = { fg = "#555555", bg = "#C4C4C4" },
  TabLine = { link = "StatusLine" },
  WinBar = { link = "StatusLine" },
  StatusLineNC = { fg = "#818181", bg = "#D4D4D4" },
  TabLineFill = { link = "StatusLineNC" },
  WinBarNC = { link = "StatusLineNC" },
  String = { fg = "#4A7587", italic = true },
  ["@string"] = { link = "String" },
  TabLineSel = { bold = true },
  BufferCurrent = { link = "TabLineSel" },
  TelescopeBorder = { fg = "#6A6A6A" },
  TelescopeMatching = { fg = "#896788", bold = true },
  TelescopeSelectionCaret = { fg = "#DC5284", bg = "#DADADA" },
  Title = { fg = "#555555", bold = true },
  ["@markup.heading"] = { link = "Title" },
  Todo = { bold = true, underline = true },
  ["@comment.todo"] = { link = "Todo" },
  Type = { fg = "#6D4C52" },
  helpSpecial = { link = "Type" },
  markdownCode = { link = "Type" },
  ["@keyword.storage"] = { link = "Type" },
  ["@markup.raw.markdown"] = { link = "Type" },
  ["@type"] = { link = "Type" },
  ["@variable.parameter.vimdoc"] = { link = "Type" },
  Underlined = { underline = true },
  ["@markup.underline"] = { link = "Underlined" },
  Visual = { bg = "#CCCCCC" },
  WarningMsg = { fg = "#C48562" },
  DiagnosticWarn = { link = "WarningMsg" },
  NoiceCmdlineIconSearch = { link = "WarningMsg" },
  NoiceCmdlinePopupBorderSearch = { link = "WarningMsg" },
  gitcommitOverflow = { link = "WarningMsg" },
  ["@comment.warning"] = { link = "WarningMsg" },
  WhichKeySeparator = { fg = "#919191" },
  WildMenu = { fg = "#E2E2E2", bg = "#896788" },
  SneakLabel = { link = "WildMenu" },
  WinSeparator = { fg = "#919191", bg = "NONE" },
  VertSplit = { link = "WinSeparator" },
  NvimTreeGitNew = { link = "diffAdded" },
  NvimTreeGitDirty = { link = "diffChanged" },
  diffFile = { fg = "#C48562", bold = true },
  diffIndexLine = { fg = "#C48562" },
  diffLine = { fg = "#896788", bold = true },
  diffNewFile = { fg = "#628562", italic = true },
  diffOldFile = { fg = "#DC5284", italic = true },
  NvimTreeGitDeleted = { link = "diffRemoved" },
  helpHyperTextEntry = { fg = "#6D4C52", bold = true },
  helpHyperTextJump = { fg = "#6D6D6D", underline = true },
  lCursor = { fg = "#E2E2E2", bg = "#747474" },
  TermCursorNC = { link = "lCursor" },
  markdownLinkText = { fg = "#6D6D6D", underline = true },
  ["@lsp.type.decorator"] = { link = "@attribute" },
  ["@lsp.type.deriveHelper"] = { link = "@attribute" },
  ["@lsp.type.boolean"] = { link = "@boolean" },
  ["@comment.documentation"] = { link = "@comment" },
  ["@lsp.type.comment"] = { link = "@comment" },
  ["@constant"] = { fg = "#6D6D6D", bold = true },
  ["@lsp.typemod.enumMember.defaultLibrary"] = { link = "@constant.builtin" },
  ["@lsp.type.enumMember"] = { link = "@constant" },
  ["@lsp.typemod.variable.static"] = { link = "@constant" },
  ["@lsp.typemod.function.defaultLibrary"] = { link = "@function.builtin" },
  ["@lsp.typemod.macro.defaultLibrary"] = { link = "@function.builtin" },
  ["@lsp.typemod.method.defaultLibrary"] = { link = "@function.builtin" },
  ["@function.call"] = { link = "@function" },
  ["@function.method"] = { link = "@function" },
  ["@function.method.call"] = { link = "@function" },
  ["@lsp.typemod.variable.callable"] = { link = "@function" },
  ["@keyword.conditional.ternary"] = { link = "@keyword.conditional" },
  ["@lsp.typemod.keyword.async"] = { link = "@keyword.coroutine" },
  ["@keyword.directive.define"] = { link = "@keyword.directive" },
  ["@lsp.type.lifetime"] = { link = "@keyword.storage" },
  ["@label.vimdoc"] = { fg = "#6D4C52", bold = true },
  ["@lsp.type.unresolvedReference"] = { sp = "#DC5284", undercurl = true },
  ["@lsp.type.variable"] = {},
  ["@markup.link.markdown"] = { fg = "#6D6D6D", underline = true },
  ["@markup.link.vimdoc"] = { fg = "#6D6D6D", underline = true },
  ["@lsp.type.formatSpecifier"] = { link = "@markup.list" },
  ["@markup.list.checked"] = { link = "@markup.list" },
  ["@markup.list.unchecked"] = { link = "@markup.list" },
  ["@markup.quote"] = { fg = "#7C7C7C" },
  ["@markup.raw.block.vimdoc"] = { fg = "NONE" },
  ["@markup.raw.block"] = { link = "@markup.raw" },
  ["@markup.strikethrough"] = { strikethrough = true },
  ["@lsp.type.namespace"] = { link = "@module" },
  ["@module.builtin"] = { link = "@module" },
  ["@none"] = {},
  ["@lsp.type.number"] = { link = "@number" },
  ["@number.float"] = { link = "@number" },
  ["@lsp.type.operator"] = { link = "@operator" },
  ["@lsp.typemod.operator.injected"] = { link = "@operator" },
  ["@lsp.type.property"] = { link = "@property" },
  ["@tag.attribute"] = { link = "@property" },
  ["@lsp.type.escapeSequence"] = { link = "@string.escape" },
  ["@string.special.path"] = { link = "@string.special" },
  ["@string.special.url"] = { link = "@string.special" },
  ["@lsp.type.string"] = { link = "@string" },
  ["@lsp.typemod.string.injected"] = { link = "@string" },
  ["@string.documentation"] = { link = "@string" },
  ["@lsp.type.builtinType"] = { link = "@type.builtin" },
  ["@lsp.typemod.class.defaultLibrary"] = { link = "@type.builtin" },
  ["@lsp.typemod.enum.defaultLibrary"] = { link = "@type.builtin" },
  ["@lsp.typemod.struct.defaultLibrary"] = { link = "@type.builtin" },
  ["@lsp.type.typeAlias"] = { link = "@type.definition" },
  ["@lsp.type.enum"] = { link = "@type" },
  ["@lsp.type.interface"] = { link = "@type" },
  ["@lsp.typemod.type.defaultLibrary"] = { link = "@type" },
  ["@lsp.typemod.typeAlias.defaultLibrary"] = { link = "@type" },
  ["@type.builtin"] = { link = "@type" },
  ["@type.definition"] = { link = "@type" },
  ["@type.qualifier"] = { link = "@type" },
  ["@lsp.type.selfKeyword"] = { link = "@variable.builtin" },
  ["@lsp.type.selfTypeKeyword"] = { link = "@variable.builtin" },
  ["@lsp.typemod.variable.defaultLibrary"] = { link = "@variable.builtin" },
  ["@lsp.type.parameter"] = { link = "@variable.parameter" },
  ["@lsp.type.generic"] = { link = "@variable" },
  ["@lsp.typemod.variable.injected"] = { link = "@variable" },
  ["@variable.member"] = { link = "@variable" },
  ["@variable.parameter"] = { link = "@variable" },
}

vim.cmd("highlight clear")
vim.cmd("let g:colors_name='my_theme'")

for group, attrs in pairs(colors) do vim.api.nvim_set_hl(0, group, attrs) end
